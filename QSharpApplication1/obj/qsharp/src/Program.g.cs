//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleQuantumRandomNumberGenerator\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":45}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleQuantumRandomNumberGenerator\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":45}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleRandomNumberInRange\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":17,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":36}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"max\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":40}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleRandomNumberInRange\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":17,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":36}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"GetGHX\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":28,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"GetGHX\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleRandomNumber\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":49,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"SampleRandomNumber\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":49,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":29}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":56,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpApplication1\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Alex_\\\\Documents\\\\Computer Science\\\\QSharp\\\\repos\\\\QSharpApplication1\\\\QSharpApplication1\\\\Program.qs\",\"Position\":{\"Item1\":56,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QSharpApplication1
{
    [SourceLocation("C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 11, 18)]
    public partial class SampleQuantumRandomNumberGenerator : Operation<QVoid, Result>, ICallable
    {
        public SampleQuantumRandomNumberGenerator(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SampleQuantumRandomNumberGenerator";
        String ICallable.FullName => "Quantum.QSharpApplication1.SampleQuantumRandomNumberGenerator";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        public override Func<QVoid, Result> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 12 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var q = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 13 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q);
#line 14 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    return Microsoft__Quantum__Measurement__MResetZ.Apply(q);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__)
        {
            return __m__.Run<SampleQuantumRandomNumberGenerator, QVoid, Result>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 18, 30)]
    public partial class SampleRandomNumberInRange : Operation<Int64, Int64>, ICallable
    {
        public SampleRandomNumberInRange(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SampleRandomNumberInRange";
        String ICallable.FullName => "Quantum.QSharpApplication1.SampleRandomNumberInRange";
        protected ICallable<Int64, Int64> Microsoft__Quantum__Math__BitSizeI
        {
            get;
            set;
        }

        protected ICallable<QVoid, Result> SampleQuantumRandomNumberGenerator__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> Microsoft__Quantum__Convert__ResultArrayAsInt
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> self
        {
            get;
            set;
        }

        public override Func<Int64, Int64> __Body__ => (__in__) =>
        {
            var max = __in__;
#line 19 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var bits = QArray<Result>.Create(0L);
#line 20 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            foreach (var idxBit in new QRange(1L, Microsoft__Quantum__Math__BitSizeI.Apply(max)))
#line hidden
            {
#line 21 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                bits = QArray<Result>.Add(bits, new QArray<Result>(SampleQuantumRandomNumberGenerator__.Apply(QVoid.Instance)));
            }

#line 23 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var sample = Microsoft__Quantum__Convert__ResultArrayAsInt.Apply(bits?.Copy());
#line 24 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return ((sample > max) ? self.Apply<Int64>(max) : sample);
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__BitSizeI = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(global::Microsoft.Quantum.Math.BitSizeI));
            this.SampleQuantumRandomNumberGenerator__ = this.__Factory__.Get<ICallable<QVoid, Result>>(typeof(SampleQuantumRandomNumberGenerator));
            this.Microsoft__Quantum__Convert__ResultArrayAsInt = this.__Factory__.Get<ICallable<IQArray<Result>, Int64>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsInt));
            this.self = this;
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 max)
        {
            return __m__.Run<SampleRandomNumberInRange, Int64, Int64>(max);
        }
    }

    [SourceLocation("C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 30, 50)]
    public partial class GetGHX : Operation<QVoid, QVoid>, ICallable
    {
        public GetGHX(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "GetGHX";
        String ICallable.FullName => "Quantum.QSharpApplication1.GetGHX";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(GetGHX));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Diagnostics__DumpMachine
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 31 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                var bits = Allocate__.Apply(3L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 32 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Message__.Apply("Initial state |000>:");
#line 33 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Diagnostics__DumpMachine.Apply(QVoid.Instance);
#line 35 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(bits[2L]);
#line 36 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(bits[2L]);
#line 37 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__CNOT.Apply((bits[2L], bits[0L]));
#line 38 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__CNOT.Apply((bits[2L], bits[1L]));
#line 40 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(bits[2L]);
#line 41 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(bits[2L]);
#line 42 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Intrinsic__CNOT.Apply((bits[2L], bits[1L]));
#line 43 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Message__.Apply("Altered state:");
#line 44 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
                    Microsoft__Quantum__Diagnostics__DumpMachine.Apply(QVoid.Instance);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(bits);
                    }
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.Microsoft__Quantum__Diagnostics__DumpMachine = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Diagnostics.DumpMachine<>));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<GetGHX, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 50, 57)]
    public partial class SampleRandomNumber : Operation<QVoid, Int64>, ICallable
    {
        public SampleRandomNumber(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SampleRandomNumber";
        String ICallable.FullName => "Quantum.QSharpApplication1.SampleRandomNumber";
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> SampleRandomNumberInRange__
        {
            get;
            set;
        }

        public override Func<QVoid, Int64> __Body__ => (__in__) =>
        {
#line 51 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            var max = 50L;
#line 52 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            Message__.Apply(String.Format("Sampling a random number between 0 and {0}: ", max));
#line 53 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            return SampleRandomNumberInRange__.Apply(max);
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.SampleRandomNumberInRange__ = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(SampleRandomNumberInRange));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__)
        {
            return __m__.Run<SampleRandomNumber, QVoid, Int64>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs", OperationFunctor.Body, 57, -1)]
    public partial class HelloQ : Operation<QVoid, QVoid>, ICallable
    {
        public HelloQ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HelloQ";
        String ICallable.FullName => "Quantum.QSharpApplication1.HelloQ";
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 58 "C:\\Users\\Alex_\\Documents\\Computer Science\\QSharp\\repos\\QSharpApplication1\\QSharpApplication1\\Program.qs"
            Message__.Apply("Hello quantum world!");
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<HelloQ, QVoid, QVoid>(QVoid.Instance);
        }
    }
}